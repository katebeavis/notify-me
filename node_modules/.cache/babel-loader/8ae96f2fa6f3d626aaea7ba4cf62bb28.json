{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NotificationType } from '../../Types';\nvar sortBy = [NotificationType.ACTION_REQUIRED, NotificationType.INFO, NotificationType.SUCCESS, NotificationType.ERROR, NotificationType.PROMOTIONAL];\nexport var REQUIRED_TYPES = [NotificationType.ACTION_REQUIRED, NotificationType.INFO];\nvar OPTIONAL_TYPES = [NotificationType.PROMOTIONAL];\nexport var customSort = function customSort(notifications) {\n  var sortByObject = sortBy.reduce(function (obj, item, index) {\n    return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, item, index));\n  }, {});\n  return notifications.sort(function (a, b) {\n    return sortByObject[a['type']] - sortByObject[b['type']];\n  });\n};\nexport var getNotificationsToShow = function getNotificationsToShow(notifications) {\n  var requiredNotifications = getRequiredNotifications(notifications);\n  var notificationsToShow = requiredNotifications.length >= 1 ? removeOptionalNotifications(notifications) : notifications;\n  return firstThreeNotifications(notificationsToShow);\n};\n\nvar getRequiredNotifications = function getRequiredNotifications(notifications) {\n  return notifications.filter(function (notification) {\n    return REQUIRED_TYPES.includes(notification.type);\n  });\n};\n\nvar removeOptionalNotifications = function removeOptionalNotifications(notifications) {\n  return notifications.filter(function (notification) {\n    return !OPTIONAL_TYPES.includes(notification.type);\n  });\n};\n\nvar firstThreeNotifications = function firstThreeNotifications(notifications) {\n  var requiredNotifications = getRequiredNotifications(notifications);\n  return requiredNotifications.length >= 3 ? requiredNotifications : notifications.slice(0, 3);\n};","map":null,"metadata":{},"sourceType":"module"}