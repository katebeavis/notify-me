{"ast":null,"code":"function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 16px;\\n  right: 16px;\\n  pointer-events: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { v1 } from 'uuid';\nimport styled from 'styled-components';\nimport { AnimatePresence } from 'framer-motion';\nimport NotificationContext from './NotificationContext';\nimport useCreateDomElement from './Portal';\nimport DefaultNotification from '../DefaultNotification/DefaultNotification';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport { customSort, getNotificationsToShow, REQUIRED_TYPES } from './helper';\n\nvar useNotifications = function useNotifications() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var notify = useCallback(function (notificationPayload) {\n    var id = v1();\n\n    var removeNotification = function removeNotification() {\n      setNotifications(function (notifications) {\n        return notifications.filter(function (notification) {\n          return notification.id !== id;\n        });\n      });\n    };\n\n    var notification = _objectSpread(_objectSpread({\n      id: id\n    }, !REQUIRED_TYPES.includes(notificationPayload.type) && {\n      onClose: removeNotification\n    }), notificationPayload);\n\n    setNotifications(function (notifications) {\n      return [].concat(_toConsumableArray(notifications), [notification]);\n    });\n  }, []);\n  var sortedNotifications = customSort(notifications);\n  var notificationsToShow = getNotificationsToShow(sortedNotifications);\n  console.log({\n    sortedNotifications: sortedNotifications\n  });\n  return {\n    notify: notify,\n    notificationsToShow: notificationsToShow\n  };\n};\n\nvar defaultComponents = {\n  Notification: DefaultNotification\n};\n\nvar NotificationProvider = function NotificationProvider(_ref) {\n  var _ref$components = _ref.components,\n      components = _ref$components === void 0 ? defaultComponents : _ref$components,\n      children = _ref.children;\n\n  var _useNotifications = useNotifications(),\n      notify = _useNotifications.notify,\n      notificationsToShow = _useNotifications.notificationsToShow;\n\n  var notificationRoot = useCreateDomElement();\n\n  var _defaultComponents$co = _objectSpread(_objectSpread({}, defaultComponents), components),\n      Notification = _defaultComponents$co.Notification;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NotificationContext.Provider, {\n    value: {\n      notify: notify\n    }\n  }, children), notificationRoot && createPortal( /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(AnimatePresence, null, notificationsToShow.map(function (notification) {\n    return /*#__PURE__*/React.createElement(NotificationContainer, {\n      key: notification.id\n    }, /*#__PURE__*/React.createElement(Notification, _extends({\n      key: notification.id\n    }, notification)));\n  }))), notificationRoot));\n};\n\nexport default NotificationProvider;\nvar Container = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/kate.beavis/development/notify-me/src/Components/Context/NotificationProvider.tsx"],"names":["React","useState","useCallback","createPortal","v1","styled","AnimatePresence","NotificationContext","useCreateDomElement","DefaultNotification","NotificationContainer","customSort","getNotificationsToShow","REQUIRED_TYPES","useNotifications","notifications","setNotifications","notify","notificationPayload","id","removeNotification","filter","notification","includes","type","onClose","sortedNotifications","notificationsToShow","console","log","defaultComponents","Notification","NotificationProvider","components","children","notificationRoot","map","Container","div"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport { v1 } from 'uuid';\nimport styled from 'styled-components';\nimport { AnimatePresence } from 'framer-motion';\n\nimport NotificationContext from './NotificationContext';\nimport useCreateDomElement from './Portal';\nimport DefaultNotification from '../DefaultNotification/DefaultNotification';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport { INotification, INotificationCallbackProps } from '../../Types';\nimport { customSort, getNotificationsToShow, REQUIRED_TYPES } from './helper';\n\nconst useNotifications = () => {\n  const [notifications, setNotifications] = useState<INotification[]>([]);\n\n  const notify = useCallback(\n    (notificationPayload: INotificationCallbackProps) => {\n      const id = v1();\n\n      const removeNotification = () => {\n        setNotifications((notifications) =>\n          notifications.filter(\n            (notification: INotification) => notification.id !== id\n          )\n        );\n      };\n\n      const notification = {\n        id,\n        ...(!REQUIRED_TYPES.includes(notificationPayload.type) && {\n          onClose: removeNotification,\n        }),\n        ...notificationPayload,\n      };\n\n      setNotifications((notifications: INotification[]) => [\n        ...notifications,\n        notification,\n      ]);\n    },\n    []\n  );\n\n  const sortedNotifications = customSort(notifications);\n  const notificationsToShow = getNotificationsToShow(sortedNotifications);\n\n  console.log({ sortedNotifications });\n\n  return { notify, notificationsToShow };\n};\n\nconst defaultComponents = { Notification: DefaultNotification };\n\nconst NotificationProvider = ({\n  components = defaultComponents,\n  children,\n}: {\n  components?: any;\n  children: React.ReactNode;\n}) => {\n  const { notify, notificationsToShow } = useNotifications();\n  const notificationRoot = useCreateDomElement();\n  const { Notification }: any = { ...defaultComponents, ...components };\n\n  return (\n    <>\n      <NotificationContext.Provider\n        value={{\n          notify,\n        }}\n      >\n        {children}\n      </NotificationContext.Provider>\n      {notificationRoot &&\n        createPortal(\n          <Container>\n            <AnimatePresence>\n              {notificationsToShow.map((notification: INotification) => (\n                <NotificationContainer key={notification.id}>\n                  <Notification key={notification.id} {...notification} />\n                </NotificationContainer>\n              ))}\n            </AnimatePresence>\n          </Container>,\n          notificationRoot\n        )}\n    </>\n  );\n};\n\nexport default NotificationProvider;\n\nconst Container = styled.div`\n  position: fixed;\n  top: 16px;\n  right: 16px;\n  pointer-events: none;\n`;\n"]},"metadata":{},"sourceType":"module"}